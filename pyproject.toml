[build-system]
requires = ['hatchling']
build-backend = 'hatchling.build'

[tool.hatch.version]
path = 'pydantic_settings_aws/version.py'

[project]
name = 'pydantic-settings-aws'
description = 'Settings management using AWS Secrets Manager and Pydantic'
authors = [
    { name = 'Rafael de Oliveira Marques', email = 'rafaelomarques@gmail.com' },
]
license = 'MIT'
readme = 'README.md'
classifiers = [
    'Development Status :: 3 - Alpha',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3 :: Only',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Intended Audience :: Developers',
    'Intended Audience :: Information Technology',
    'Intended Audience :: System Administrators',
    'License :: OSI Approved :: MIT License',
    'Operating System :: Unix',
    'Operating System :: POSIX :: Linux',
    'Operating System :: MacOS',
    'Operating System :: Microsoft',
    'Environment :: Console',
    'Topic :: Software Development :: Libraries :: Python Modules',
    'Topic :: Internet',
]
requires-python = '>=3.8'
dependencies = [
    'pydantic>=2.0.1',
    'pydantic-settings>=2.0.2',
    'boto3>=1.27.0'
]
dynamic = ['version']

[project.urls]
Homepage = "https://github.com/ceb10n/pydantic-settings-aws"
Documentation = "https://ceb10n.github.io/pydantic-settings-aws/"
Repository = "https://github.com/ceb10n/pydantic-settings-aws"

[tool.pytest.ini_options]
testpaths = 'tests'
log_cli = true
log_cli_level = "ERROR"
log_cli_format = "%(message)s"

log_file = "pytest.log"
log_file_level = "ERROR"
log_file_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_file_date_format = "%Y-%m-%d %H:%M:%S"

[tool.coverage.run]
source = ['pydantic_settings_aws']
branch = true
context = '${CONTEXT}'

[tool.coverage.report]
precision = 2

[tool.coverage.paths]
source = ['pydantic_settings_aws/']

[tool.ruff]
line-length = 80
target-version = 'py38'

[tool.ruff.lint]
extend-select = ['Q', 'RUF100', 'C90', 'UP', 'I']
flake8-quotes = { inline-quotes = 'double', multiline-quotes = 'double' }
isort = { known-first-party = ['pydantic_settings_aws', 'tests'] }
mccabe = { max-complexity = 14 }
pydocstyle = { convention = 'google' }

[tool.ruff.format]
quote-style = 'double'
indent-style = 'space'

[tool.mypy]
python_version = '3.8'
show_error_codes = true
follow_imports = 'silent'
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
warn_unused_configs = true
disallow_subclassing_any = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_calls = true
disallow_untyped_defs = true
